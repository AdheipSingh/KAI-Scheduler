/*
Copyright 2025 NVIDIA CORPORATION
SPDX-License-Identifier: Apache-2.0
*/
// Code generated by lister-gen. DO NOT EDIT.

package v2

import (
	schedulingv2 "github.com/NVIDIA/KAI-scheduler/pkg/apis/scheduling/v2"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// QueueLister helps list Queues.
// All objects returned here must be treated as read-only.
type QueueLister interface {
	// List lists all Queues in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*schedulingv2.Queue, err error)
	// Queues returns an object that can list and get Queues.
	Queues(namespace string) QueueNamespaceLister
	QueueListerExpansion
}

// queueLister implements the QueueLister interface.
type queueLister struct {
	listers.ResourceIndexer[*schedulingv2.Queue]
}

// NewQueueLister returns a new QueueLister.
func NewQueueLister(indexer cache.Indexer) QueueLister {
	return &queueLister{listers.New[*schedulingv2.Queue](indexer, schedulingv2.Resource("queue"))}
}

// Queues returns an object that can list and get Queues.
func (s *queueLister) Queues(namespace string) QueueNamespaceLister {
	return queueNamespaceLister{listers.NewNamespaced[*schedulingv2.Queue](s.ResourceIndexer, namespace)}
}

// QueueNamespaceLister helps list and get Queues.
// All objects returned here must be treated as read-only.
type QueueNamespaceLister interface {
	// List lists all Queues in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*schedulingv2.Queue, err error)
	// Get retrieves the Queue from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*schedulingv2.Queue, error)
	QueueNamespaceListerExpansion
}

// queueNamespaceLister implements the QueueNamespaceLister
// interface.
type queueNamespaceLister struct {
	listers.ResourceIndexer[*schedulingv2.Queue]
}
