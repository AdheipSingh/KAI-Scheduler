/*
Copyright 2025 NVIDIA CORPORATION
SPDX-License-Identifier: Apache-2.0
*/
// Code generated by client-gen. DO NOT EDIT.

package v1alpha2

import (
	context "context"

	scheme "github.com/NVIDIA/KAI-scheduler/pkg/apis/client/clientset/versioned/scheme"
	schedulingv1alpha2 "github.com/NVIDIA/KAI-scheduler/pkg/apis/scheduling/v1alpha2"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// BindRequestsGetter has a method to return a BindRequestInterface.
// A group's client should implement this interface.
type BindRequestsGetter interface {
	BindRequests(namespace string) BindRequestInterface
}

// BindRequestInterface has methods to work with BindRequest resources.
type BindRequestInterface interface {
	Create(ctx context.Context, bindRequest *schedulingv1alpha2.BindRequest, opts v1.CreateOptions) (*schedulingv1alpha2.BindRequest, error)
	Update(ctx context.Context, bindRequest *schedulingv1alpha2.BindRequest, opts v1.UpdateOptions) (*schedulingv1alpha2.BindRequest, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, bindRequest *schedulingv1alpha2.BindRequest, opts v1.UpdateOptions) (*schedulingv1alpha2.BindRequest, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*schedulingv1alpha2.BindRequest, error)
	List(ctx context.Context, opts v1.ListOptions) (*schedulingv1alpha2.BindRequestList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *schedulingv1alpha2.BindRequest, err error)
	BindRequestExpansion
}

// bindRequests implements BindRequestInterface
type bindRequests struct {
	*gentype.ClientWithList[*schedulingv1alpha2.BindRequest, *schedulingv1alpha2.BindRequestList]
}

// newBindRequests returns a BindRequests
func newBindRequests(c *SchedulingV1alpha2Client, namespace string) *bindRequests {
	return &bindRequests{
		gentype.NewClientWithList[*schedulingv1alpha2.BindRequest, *schedulingv1alpha2.BindRequestList](
			"bindrequests",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *schedulingv1alpha2.BindRequest { return &schedulingv1alpha2.BindRequest{} },
			func() *schedulingv1alpha2.BindRequestList { return &schedulingv1alpha2.BindRequestList{} },
		),
	}
}
